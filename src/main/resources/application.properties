spring.profiles.active=${APP_PROFILE:default}
# spring
spring.application.name=cloud-service
# tomcat
server.port=8088
# swagger
springdoc.api-docs.enabled=${SWAGGER_DOCS:true}
springdoc.show-actuator=true
springdoc.swagger-ui.groups-order=DESC
springdoc.swagger-ui.disable-swagger-default-url=true
# postgres
spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB:netology}
spring.datasource.username=${POSTGRES_USERNAME:postgres}
spring.datasource.password=${POSTGRES_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver
# jpa
## force update - create-drop
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# flyway
spring.flyway.url=jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB:netology}
spring.flyway.user=${POSTGRES_USERNAME:postgres}
spring.flyway.password=${POSTGRES_PASSWORD:postgres}
spring.flyway.schemas=${POSTGRES_SCHEMA:public}
spring.flyway.locations=${FLYWAY_PATH:db/migration/postgresql}
spring.flyway.baselineOnMigrate=true
# security
## logging
logging.level.org.springframework.security=${LOGGING_LEVEL:INFO}
## jwt
jwt.token.secret=${JWT_TOKEN_SECRET:jwt-netology-cloud-service}
jwt.token.expired=${JWT_TOKEN_EXPIRED:3600000}
jwt.token.httpHeaderName=Auth-Token
# cors
server.cors.originFromHeader.label={origin}
server.cors.allowedOrigins={origin};http://localhost:8088
server.cors.allowedMethods=GET;PUT;POST;DELETE
# health - spring actuator
management.endpoints.web.exposure.include=beans,env,health,info,metrics,mappings
management.endpoint.health.showDetails=always
# storage
## minio
minio.endpoint=${MINIO_HOST:http://localhost:9000}
minio.access_key=${MINIO_ACCESS_KEY:youraccesskey}
minio.secret_key=${MINIO_SECRET_KEY:yoursecretkey}
minio.bucket=${MINIO_FILES_BUCKET:netology}
