version: '3.8'

services:

  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-netology}
    ports:
      - "5432:5432"
    volumes:
      - ./../data/postgres-data:/var/lib/postgresql/data
    networks:
      - network
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    ports:
      - "5050:80"
    volumes:
      - ./../data/pgadmin-data:/var/lib/pgadmin
    networks:
      - network
    restart: unless-stopped

  backend:
    container_name: cloud-service
    build:
      context: ./../
      dockerfile: Dockerfile
    ports:
      - "8088:8088"
    networks:
      - network
    depends_on:
      - postgres
    environment:
      APP_PROFILE: local
      SWAGGER_DOCS: true
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: netology
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_SCHEMA: public
      FLYWAY_PATH: db/migration/postgresql
      LOGGING_LEVEL: INFO
      JWT_TOKEN_SECRET: jwt-netology-cloud-service
      JWT_TOKEN_EXPIRED: 3600000
    restart: unless-stopped

  front:
    build:
      context: ./../frontend
      dockerfile: ./Dockerfile
    depends_on:
      - backend
    ports:
      - "8080:8080"
    networks:
      - network
    restart: always

networks:
  network:
    driver: bridge